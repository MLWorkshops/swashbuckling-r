---
title: "Data Visualization and Perception"
format: pptx
execute:
  echo: false
date: today
editor: visual
knitr:
  opts_chunk:
    out.dpi: 300
    out.width: 7
---

```{r load-packages, echo=FALSE}
# Load packages
library(tidyverse)
library(gridExtra)
library(ggplot2)
library(patchwork)
```

## Introduction

Ahoy matey and welcome to a brief introduction to data viz and perception using one of the most famous packages in R, `ggplot2` (now part of the `tidyverse` package).

For reference, here is a nice `ggplot2` cheatsheet from the makers of the package: <https://rstudio.github.io/cheatsheets/data-visualization.pdf>. Here are the docs: <https://ggplot2.tidyverse.org/>.

## Edges

Let's read in some data.

```{r}
# Read data file
pirate_data = read.csv("data/pirate_data1.csv",
  header=TRUE,
  sep = ",")
```

We are attracted to edges in visual media, seeing contrasts and brightness relatively rather than in the absolute. Thus, background choices matter - the same color or shade will be perceived differently against a darker background vs. a lighter one.

Here, we plot the points against a light grey vs dark grey background. Which one is easier to understand?

```{r}
# Use a light grey background
p1 <- ggplot(pirate_data,
  mapping=aes(x=x, y=y)) +
  geom_point(size=2) +
  theme(panel.background = element_rect(fill = 'lightgrey'))

# Use a dark grey background
p2 <- ggplot(pirate_data,
  mapping=aes(x=x, y=y)) +
  geom_point(size=2) +
  theme(panel.background = element_rect(fill = "#36454F"))

p1+p2
```

Introducing colors vs. monochrome may complicate a graph and make it harder to perceive structures.

```{r}
z = replicate(1, sample(c("black"), dim(pirate_data)[[1]], TRUE))
pirate_data$z = z

p3 <- ggplot(pirate_data,
  mapping=aes(x=x, y=y)) +
  geom_point(size=2, colour=z) +
  theme_bw()

z = replicate(1, sample(c("blue", "orange", "red", "black", "yellow"), dim(pirate_data)[[1]], TRUE))
pirate_data$z = z

p4 <- ggplot(pirate_data,
  mapping=aes(x=x, y=y)) +
  geom_point(size=2, colour=z) +
  theme_bw()

p3+p4
```

## Pop-out

A phenomenon called pop-out makes elements in a graph easier to see or find based on channels used, where a channel could be the shape channel, color channel, size channel, etc. Take care with your choice of channel for representing data as some have stronger perception than others.

Let's read in some more data.

```{r}
# Read data file
pirate_data = read.csv("data/pirate_data2.csv",
  header=TRUE,
  sep = ",")
```

Now for a little bit of fun.

```{r}
# Simple plot with defaults
p5 = ggplot(pirate_data, aes(x=x, y=y)) +
  geom_point() +
  theme_bw()

# Create a color vector
z = replicate(nrow(pirate_data), "black")
z[pirate_data$y < 300] = "brown"

# Adding point size, color and labels
p6 = ggplot(pirate_data, aes(x=x, y=y)) +
  geom_point(size=1, colour=z, show.legend = FALSE) +
  labs(x = "X", y = "Y", title = "Set Sail in Color") + 
  theme_bw()

# Create graphic with two plots side-by-side
p5 + p6
```

Subsample the data because it's really dense.

```{r}
dim(pirate_data)
data = pirate_data[sample(nrow(pirate_data), 100), ]
```

Fiddle with the data to get one different point.

```{r}
# Save last entry and remove for this experiment
save_entry = data[nrow(data),]
data = data[1:nrow(data)-1,]

# Create new column and populate with same value (blue)
data$color = replicate(nrow(data), 'blue')

# Give the saved sample the "color" orange
save_entry$color = 'orange'

# Assign an additional row to the sample
data[nrow(data) + 1,] = save_entry
```

Plot two plots on one grid. Which two channels are represented below and which one is stronger?

```{r, echo=FALSE}
# Plot #1 with ggplot2 that uses different shapes
p7 = ggplot(data, aes(x=x, y=y, shape=color)) +
  labs(x = "X", y = "Y", title = "Pop-Out on Shape Channel") + 
  geom_point(size=3, aes(colour='orange'), show.legend = FALSE) +
  theme_bw()

# Plot #2 with ggplot2 that uses colors
p8 = ggplot(data, aes(x=x, y=y, color=color)) +
  labs(x = "X", y = "Y", title = "Pop-Out on Color Channel") + 
  geom_point(size=3, show.legend = FALSE) +
  theme_bw()

# Create graphic with two plots side-by-side
p7+p8
```

## Interpreting sizes as values

Let's see why pie charts are so infamous...

```{r}
# Create Data
data <- data.frame(
  group=LETTERS[1:5],
  value=c(13,7,9,21,2)
)

# Also have groups as row names for referencing later on
rownames(data) = LETTERS[1:5]

# Basic piechart without value labels
ggplot(data, aes(x="", y=value, fill=rownames(data))) +
  geom_bar(stat="identity", width=1) +
  coord_polar("y", start=0) +
  theme(axis.text = element_blank()) +
  scale_fill_grey()
```

From the above pie chart, what would you say the relative size is of group D (biggest slice)? How about group E (smallest slice)? What is the ratio of group E to group A?

```{r}
# Get the relative sizes or percents
data$perc = data$value / sum(data$value) * 100
data

# How off were you?

# Get the ratio of E to A
data["E", "value"] / data["A", "value"]
```

Is it any easier if the graph is a regular bar chart?

```{r}
ggplot(data, aes(x=group, y=value, fill=group)) +
  geom_bar(stat="identity", width=1) +
  theme(axis.text = element_blank()) +
  scale_fill_grey() +
  theme_bw() +
  theme(axis.text.y = element_blank(),
        panel.grid = element_blank())
```

Thanks for listening, matey!
